trigger:
  batch: true
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

schedules:
  - cron: "0 0 * * 0"
    displayName: Weekly build
    branches:
      include:
        - main
    always: true

resources:
  repositories:
    - repository: templates
      type: github
      name: osisoft/OSI-Samples
      endpoint: osisoft/OSI-Samples

variables:
  - template: "/miscellaneous/build_templates/variables.yml@templates"
  - name: CertFile
    value: cert.cer
  - name: RootCertificateOCS
    value: product-readiness.omf-basic_api-cpp.ocs.cer
  - name: analysisProject
    value: OMF_API_CPP

jobs:
  - job: Tests_OCS
    pool:
      name: 00-OSIManaged-Test
      demands: COMPUTERNAME -equals $(buildAgent)
    variables:
      - name: Endpoints.0.Selected
        value: true
      - name: Endpoints.1.Selected
        value: false
      - name: Endpoints.2.Selected
        value: false
      - name: Endpoints.0.TenantId
        value: $(TenantId)
      - name: Endpoints.0.NamespaceId
        value: $(NamespaceId)
      - name: Endpoints.0.ClientId
        value: $(ClientId)
      - name: Endpoints.0.ClientSecret
        value: $(ClientSecret)
      - name: Endpoints.0.VerifySSL
        value: $(CertFile)
    steps:
      - template: '/miscellaneous/build_templates/appsettings.yml@templates'
        parameters:
          secrets: 'TenantId, NamespaceId, ClientId, ClientSecret'
          
      - template: "/miscellaneous/build_templates/config.yml@templates"
        parameters:
          fileOriginal: $(CertFile)
          fileLibrary: $(RootCertificateOCS)
          filePath: '/OMF_API'
      
      - task: NuGetCommand@2
        displayName: 'Restore Packages'
        inputs:
          command: 'restore'
          feedsToUse: 'config'
          nugetConfigPath: 'nuget.config'
          
      - task: VSBuild@1
        inputs:
          configuration: $(BuildConfiguration)
          platform: $(BuildPlatform)

      - task: PowerShell@1
        displayName: 'Load boost test adapter location'
        inputs:
          scriptType: inlineScript
          arguments: '-VisualStudioLocation:"C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise"'
          inlineScript: |
            Param(
                [string]$VisualStudioLocation
            )
            
            $boostTestAdapter = Get-ChildItem -Recurse -Filter "boosttestadapter.dll" -Path $VisualStudioLocation
            $testAdapterDir = $boostTestAdapter.Directory.FullName
            if(-not(Test-Path $testAdapterDir))
            {
                Write-Error "Boost test adapter not found!"
            }
            Write-Host "Boost test adapter location: $testAdapterDir"
            Write-Host "##vso[task.setvariable variable=BoostTestAdapterLocation]$testAdapterDir"

      - task: VSTest@2
        inputs:
          testAssemblyVer2: '**\*.exe'
          searchFolder: '$(System.DefaultWorkingDirectory)'
          vsTestVersion: 'Latest'
          pathtoCustomTestAdapters: '$(BoostTestAdapterLocation)'
          otherConsoleOptions: '/Platform:x86'
          platform: '$(BuildPlatform)'
          configuration: '$(BuildConfiguration)'
          failOnMinTestsNotRun: true
          diagnosticsEnabled: true
          rerunFailedTests: true
        condition: succeededOrFailed()

  - job: Tests_PI
    pool:
      name: 00-OSIManaged-Test
      demands: COMPUTERNAME -equals $(buildAgent)
    variables:
      - name: Endpoints.0.Selected
        value: false
      - name: Endpoints.1.Selected
        value: false
      - name: Endpoints.2.Selected
        value: true
      - name: Endpoints.2.Resource
        value: $(PIWebAPI)
      - name: Endpoints.2.Username
        value: $(Username)
      - name: Endpoints.2.Password
        value: $(Password)
      - name: Endpoints.2.DataArchiveName
        value: $(DataArchiveName)
      - name: Endpoints.2.VerifySSL
        value: ""
    steps:
      - template: '/miscellaneous/build_templates/appsettings.yml@templates'
        parameters:
          secrets: 'Username, Password, PIWebAPI, DataArchiveName'
      
      - task: NuGetCommand@2
        displayName: 'Restore Packages'
        inputs:
          command: 'restore'
          feedsToUse: 'config'
          nugetConfigPath: 'nuget.config'
      
      - task: VSBuild@1
        inputs:
          configuration: $(BuildConfiguration)
          platform: $(BuildPlatform)
      
      - task: PowerShell@1
        displayName: 'Load boost test adapter location'
        inputs:
          scriptType: inlineScript
          arguments: '-VisualStudioLocation:"C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise"'
          inlineScript: |
            Param(
                [string]$VisualStudioLocation
            )
            
            $boostTestAdapter = Get-ChildItem -Recurse -Filter "boosttestadapter.dll" -Path $VisualStudioLocation
            $testAdapterDir = $boostTestAdapter.Directory.FullName
            if(-not(Test-Path $testAdapterDir))
            {
                Write-Error "Boost test adapter not found!"
            }
            Write-Host "Boost test adapter location: $testAdapterDir"
            Write-Host "##vso[task.setvariable variable=BoostTestAdapterLocation]$testAdapterDir"

      - task: VSTest@2
        inputs:
          testAssemblyVer2: '**\*.exe'
          searchFolder: '$(System.DefaultWorkingDirectory)'
          vsTestVersion: 'Latest'
          pathtoCustomTestAdapters: '$(BoostTestAdapterLocation)'
          otherConsoleOptions: '/Platform:x86'
          platform: '$(BuildPlatform)'
          configuration: '$(BuildConfiguration)'
          failOnMinTestsNotRun: true
          diagnosticsEnabled: true
          rerunFailedTests: true
        condition: succeededOrFailed()
  
  - job: Tests_EDS
    pool:
      name: 00-OSIManaged-Test
      demands: COMPUTERNAME -equals $(buildAgent)
    variables:
      - name: Endpoints.0.Selected
        value: false
      - name: Endpoints.1.Selected
        value: true
      - name: Endpoints.2.Selected
        value: false
    steps:
      - template: '/miscellaneous/build_templates/appsettings.yml@templates'
      
      - task: NuGetCommand@2
        displayName: 'Restore Packages'
        inputs:
          command: 'restore'
          feedsToUse: 'config'
          nugetConfigPath: 'nuget.config'
      
      - task: VSBuild@1
        inputs:
          configuration: $(BuildConfiguration)
          platform: $(BuildPlatform)
      
      - task: PowerShell@1
        displayName: 'Load boost test adapter location'
        inputs:
          scriptType: inlineScript
          arguments: '-VisualStudioLocation:"C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise"'
          inlineScript: |
            Param(
                [string]$VisualStudioLocation
            )
            
            $boostTestAdapter = Get-ChildItem -Recurse -Filter "boosttestadapter.dll" -Path $VisualStudioLocation
            $testAdapterDir = $boostTestAdapter.Directory.FullName
            if(-not(Test-Path $testAdapterDir))
            {
                Write-Error "Boost test adapter not found!"
            }
            Write-Host "Boost test adapter location: $testAdapterDir"
            Write-Host "##vso[task.setvariable variable=BoostTestAdapterLocation]$testAdapterDir"

      - task: VSTest@2
        inputs:
          testAssemblyVer2: '**\*.exe'
          searchFolder: '$(System.DefaultWorkingDirectory)'
          vsTestVersion: 'Latest'
          pathtoCustomTestAdapters: '$(BoostTestAdapterLocation)'
          otherConsoleOptions: '/Platform:x86'
          platform: '$(BuildPlatform)'
          configuration: '$(BuildConfiguration)'
          failOnMinTestsNotRun: true
          diagnosticsEnabled: true
          rerunFailedTests: true
        condition: succeededOrFailed()

  - job: Analysis
    pool:
      name: 00-OSIManaged-Test
      demands: COMPUTERNAME -equals $(buildAgent)
    steps:
      - template: '/miscellaneous/build_templates/appsettings.yml@templates'
      
      - task: NuGetCommand@2
        displayName: 'Restore Packages'
        inputs:
          command: 'restore'
          feedsToUse: 'config'
          nugetConfigPath: 'nuget.config'

      - template: '/miscellaneous/build_templates/analysis.yml@templates'
